// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Danh sách các Role của User
enum UserRole {
  ADMIN
  CUSTOMER
  SPSO
}

// Trạng thái của máy in
enum PrinterStatus {
  ENABLE
  DISABLE
  MAINTENANCE
}

// Chọn kiểu in 1 mặt hoặc 2 mặt
enum PrintSideType {
  SINGLE_SIDE
  DOUBLE_SIDE
}

// Chọn kích thước giấy in
enum PageSize {
  A3
  A4
}

// Trạng thái của tài liệu
enum DocumentStatus {
  PENDING
  IS_PRINTING
  COMPLETED
  FAILED
}

// Trạng thái của dịch vụ in
enum ServiceStatus {
  PENDING
  IS_PRINTING
  COMPLETED
  FAILED
}

// Trạng thái của giao dịch mua hàng
enum PurchaseStatus {
  PENDING
  COMPLETED
  FAILED
}

// Loại báo cáo
enum ReportType {
  MONTHLY
  QUARTERLY
  YEARLY
}

// Model của User
model User {
  id   String   @id @default(uuid())
  role UserRole

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime? @default(now())

  email      String
  familyName String
  givenName  String
  avatar     String? // URL ảnh đại diện

  spso     Spso?     @relation("UserToSpso")
  customer Customer? @relation("UserToCustomer")

  LoginLog LoginLog[]
}

// Model của SPSO
model Spso {
  id          String @id
  phoneNumber String
  user        User   @relation(fields: [id], references: [id], name: "UserToSpso")

  FeedbackForm         FeedbackForm[]
  defaultConfiguration defaultConfiguration[]
}

// Model của Customer
model Customer {
  id          String  @id
  idInSchool  String? // Mã số sinh viên/giáo viên
  currentPage Int     @default(0)
  user        User    @relation(fields: [id], references: [id], name: "UserToCustomer")

  Document        Document[]
  PrintServiceLog PrintServiceLog[]

  PurchaseLog  PurchaseLog[]
  FeedbackForm FeedbackForm[]
}

// Model của PrinterLocation
model PrinterLocation {
  id String @id @default(uuid())

  campusName   String // Tên khuôn viên (campus) chứa máy in
  buildingName String // Tên tòa nhà (building) chứa máy in
  roomName     String // Số phòng (room) đặt máy in
  campusAdress String? // Địa chỉ khuôn viên (campus) chứa máy in
  hotline      String? // Số điện thoại hỗ trợ máy in
  description  String? // Mô tả ngắn về vị trí máy in (nullable - có thể không có)

  Printer Printer[]
}

// Model của Printer
model Printer {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) // Ngày giờ tạo (tự động ghi nhận thời gian tạo)
  updatedAt DateTime @updatedAt // Ngày giờ cập nhật (tự động ghi nhận thời gian cập nhật)

  brandName        String // Tên hãng máy in
  model            String // Tên dòng máy in
  shortDescription String? // Mô tả ngắn về máy in
  printerStatus    PrinterStatus // Trạng thái máy in (ENABLE, DISABLE, MAINTENANCE)
  isInProgress     Boolean // Máy in đang sử dụng

  location   PrinterLocation @relation(fields: [locationId], references: [id])
  locationId String // ID của vị trí máy in

  PrintServiceLog PrintServiceLog[]
}

// Model của Document
model Document {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  Customer   Customer @relation(fields: [customerId], references: [id])
  customerId String

  printLogId String?
  PrintLog   PrintServiceLog? @relation(fields: [printLogId], references: [id])

  fileName String // Tên tài liệu
  fileType String // Loại tài liệu (pdf, docx, pptx, ...)

  totalCostPage Int // Số trang của tài liệu

  printSideType PrintSideType // Kiểu in (1 mặt hoặc 2 mặt)

  pageSize    PageSize // Kích thước giấy in (A3, A4)
  pageToPrint Json // Trang cần in (mảng các trang cần in)
  numOfCop    Int // Số bản sao

  documentStatus DocumentStatus // Trạng thái tài liệu (PENDING, IS_PRINTING, COMPLETED, FAILED)
  fileContent    Bytes // Nội dung tài liệu (file pdf, docx, pptx, ...)
}

// Model của PrintServiceLog
model PrintServiceLog {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])

  printerId String
  printer   Printer @relation(fields: [printerId], references: [id])

  documents Document[]

  startTime DateTime? // Thời gian bắt đầu in
  endTime   DateTime? // Thời gian kết thúc in

  serviceStatus ServiceStatus // Trạng thái dịch vụ in (PENDING, IS_PRINTING, COMPLETED, FAILED)
  totalPageCost Int // Số trang đã in 
}

model PurchaseLog {
  id String @id @default(uuid())

  customerId String // ID của khách hàng
  customer   Customer @relation(fields: [customerId], references: [id])

  orderId String // Mã đơn hàngs

  transactionTime DateTime       @default(now()) // Thời gian giao dịch
  numberOfPage    Int // Số trang đã in
  price           Float // Giá tiền
  purchaseStatus  PurchaseStatus // Trạng thái giao dịch (PENDING, COMPLETED, FAILED)
}

model FeedbackForm {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])

  spsoId String
  spso   Spso   @relation(fields: [spsoId], references: [id])

  title   String // Tiêu đề feedback
  content Bytes // Nội dung feedback
}

model LoginLog {
  id        String   @id @default(uuid())
  loginTime DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model defaultConfiguration {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  spsoId String
  spso   Spso   @relation(fields: [spsoId], references: [id])

  firstTermGivenDate  DateTime @default(now()) // Ngày cấp giấy kỳ 1 (Tháng 9)
  secondTermGivenDate DateTime @default(now()) // Ngày cấp giấy kỳ 2 (Tháng 1)
  thirdTermGivenDate  DateTime @default(now()) // Ngày cấp giấy kỳ 3 (Tháng 6)

  defaultPage        Int // Số trang mặc định
  permittedFileTypes Json // Loại file được phép in

  isLastConfiguration Boolean // Cấu hình cuối cùng
}

model PeriodicReport {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  title         String // Tiêu đề báo cáo
  reportContent Bytes // Nội dung báo cáo
  reportType    ReportType // Loại báo cáo (MONTHLY, QUARTERLY, YEARLY)
}
